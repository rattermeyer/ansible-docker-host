# vim: noai:ts=2:sw=2:expandtab
---
# file dev
- name: Install aufs
  apt: name={{item}}
  with_items:
    - linux-image-extra-{{ansible_kernel}}
    - aufs-tools
- name: Install Docker
  get_url: url=https://get.docker.com/ubuntu/ dest=/tmp/setup-docker.sh mode=0755
  register: result
- apt: name=python-pip
- shell: easy_install -U pip

# If I remember correctly forced to 1.1.0 because of dependencies, I do not remember
- pip: name=docker-py version=1.1.0 

- shell: /tmp/setup-docker.sh creates=/usr/bin/docker
  when: result|success
- template: src=docker.j2 dest=/etc/default/docker owner=root group=root mode=0644 backup=yes
  when: result|success
- shell: service docker restart
  when: result|success

- group: name=docker state=present

- name: "add {{ user }} to docker group"
  user: name={{ user }} groups=docker append=yes

- name: Adjust memory and swap accounting
  lineinfile: dest=/etc/default/grub line="GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1\""
- shell: update-grub

- name: Install Docker Compose
  get_url: url="https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ansible_system}}-{{ansible_architecture}}" dest=/usr/local/bin/docker-compose mode=0755 force=yes
- name: Install Docker Compose bash completion
  get_url: url="https://raw.githubusercontent.com/docker/compose/{{ docker_compose_version }}/contrib/completion/bash/docker-compose" dest=/etc/bash_completion.d/docker-compose

- name: run consul
  docker:
    name: consul
    image: progrium/consul
    ports:
    - "{{ansible_default_ipv4.address}}}:8400:8400"
    - "{{ansible_default_ipv4.address}}:8500:8500"
    - "{{ansible_default_ipv4.address}}:8600:53/udp"
    - "{{ansible_docker0.ipv4.address}}:53:53/udp"
    hostname: "node1"
    command: "-server -advertise {{ansible_default_ipv4.address}} -bootstrap -ui-dir /ui"
    restart_policy: always
  ignore_errors: yes
- name: run shipyard
  command: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock shipyard/deploy start 
  args:
      creates: "{{home}}/shipyard.done"
- command: touch {{home}}/shipyard.done

- name: run registrator
  docker: 
    image: gliderlabs/registrator
    hostname: "{{ansible_hostname}}" 
    volumes:
    - "/var/run/docker.sock:/tmp/docker.sock" 
    command: "consul://{{ansible_default_ipv4.address}}:8500"
    restart_policy: always
  ignore_errors: yes

- name: run docker registry as mirror
  docker: 
    image: registry 
    ports:
    - "5000:5000"
    volumes:
    - "/opt/docker-registry:/tmp/registry"
    restart_policy: always
    env:
      STANDALONE: false
      MIRROR_SOURCE: https://registry-1.docker.io
      MIRROR_SOURCE_INDEX: https://index.docker.io
  ignore_errors: yes

